{"ast":null,"code":"var _jsxFileName = \"/Users/grzegorz/Desktop/Projects/react-shopping-list-app/src/components/Products/AddNewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./AddNewProduct.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewProduct = props => {\n  _s();\n\n  const [enteredProduct, setEnteredProduct] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [isError, setIsError] = useState();\n\n  const productChangeHandler = e => {\n    setEnteredProduct(e.target.value);\n  };\n\n  const amountChangeHandler = e => {\n    setEnteredAmount(e.target.value);\n  };\n\n  const addNewProductHandler = e => {\n    e.preventDefault();\n\n    if (enteredProduct.trim().length === 0 || enteredAmount.trim().length === 0) {\n      setIsError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid product name and amount (non-empty values).\"\n      });\n    }\n\n    if (+enteredAmount < 0.01) {\n      setIsError(true);\n    }\n\n    props.onAddProduct(enteredProduct, enteredAmount);\n    setEnteredProduct(\"\");\n    setEnteredAmount(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isError && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: isError.title,\n      message: isError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addNewProductHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"product\",\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: productChangeHandler,\n          id: \"product\",\n          type: \"text\",\n          value: enteredProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: amountChangeHandler,\n          id: \"amount\",\n          type: \"number\",\n          value: enteredAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add New Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddNewProduct, \"Kn4IKdPqFQtrylKUS6xPbPX7GoY=\");\n\n_c = AddNewProduct;\nexport default AddNewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewProduct\");","map":{"version":3,"names":["React","useState","styles","Card","Button","ErrorModal","AddNewProduct","props","enteredProduct","setEnteredProduct","enteredAmount","setEnteredAmount","isError","setIsError","productChangeHandler","e","target","value","amountChangeHandler","addNewProductHandler","preventDefault","trim","length","title","message","onAddProduct","input"],"sources":["/Users/grzegorz/Desktop/Projects/react-shopping-list-app/src/components/Products/AddNewProduct.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./AddNewProduct.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\n\nconst AddNewProduct = (props) => {\n  const [enteredProduct, setEnteredProduct] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [isError, setIsError] = useState();\n\n  const productChangeHandler = (e) => {\n    setEnteredProduct(e.target.value);\n  };\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n  };\n\n  const addNewProductHandler = (e) => {\n    e.preventDefault();\n\n    if (\n      enteredProduct.trim().length === 0 ||\n      enteredAmount.trim().length === 0\n    ) {\n      setIsError({\n        title: \"Invalid input\",\n        message:\n          \"Please enter a valid product name and amount (non-empty values).\",\n      });\n    }\n    if (+enteredAmount < 0.01) {\n      setIsError(true);\n    }\n\n    props.onAddProduct(enteredProduct, enteredAmount);\n\n    setEnteredProduct(\"\");\n    setEnteredAmount(\"\");\n  };\n\n  return (\n    <div>\n      {isError && (\n        <ErrorModal title={isError.title} message={isError.message} />\n      )}\n      <Card className={styles.input}>\n        <form onSubmit={addNewProductHandler}>\n          <label htmlFor=\"product\">Product</label>\n          <input\n            onChange={productChangeHandler}\n            id=\"product\"\n            type=\"text\"\n            value={enteredProduct}\n          ></input>\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            onChange={amountChangeHandler}\n            id=\"amount\"\n            type=\"number\"\n            value={enteredAmount}\n          ></input>\n          <Button type=\"submit\">Add New Product</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddNewProduct;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;;EAEA,MAAMa,oBAAoB,GAAIC,CAAD,IAAO;IAClCN,iBAAiB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;EACD,CAFD;;EAGA,MAAMC,mBAAmB,GAAIH,CAAD,IAAO;IACjCJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;EACD,CAFD;;EAIA,MAAME,oBAAoB,GAAIJ,CAAD,IAAO;IAClCA,CAAC,CAACK,cAAF;;IAEA,IACEZ,cAAc,CAACa,IAAf,GAAsBC,MAAtB,KAAiC,CAAjC,IACAZ,aAAa,CAACW,IAAd,GAAqBC,MAArB,KAAgC,CAFlC,EAGE;MACAT,UAAU,CAAC;QACTU,KAAK,EAAE,eADE;QAETC,OAAO,EACL;MAHO,CAAD,CAAV;IAKD;;IACD,IAAI,CAACd,aAAD,GAAiB,IAArB,EAA2B;MACzBG,UAAU,CAAC,IAAD,CAAV;IACD;;IAEDN,KAAK,CAACkB,YAAN,CAAmBjB,cAAnB,EAAmCE,aAAnC;IAEAD,iBAAiB,CAAC,EAAD,CAAjB;IACAE,gBAAgB,CAAC,EAAD,CAAhB;EACD,CArBD;;EAuBA,oBACE;IAAA,WACGC,OAAO,iBACN,QAAC,UAAD;MAAY,KAAK,EAAEA,OAAO,CAACW,KAA3B;MAAkC,OAAO,EAAEX,OAAO,CAACY;IAAnD;MAAA;MAAA;MAAA;IAAA,QAFJ,eAIE,QAAC,IAAD;MAAM,SAAS,EAAEtB,MAAM,CAACwB,KAAxB;MAAA,uBACE;QAAM,QAAQ,EAAEP,oBAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,SAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,QAAQ,EAAEL,oBADZ;UAEE,EAAE,EAAC,SAFL;UAGE,IAAI,EAAC,MAHP;UAIE,KAAK,EAAEN;QAJT;UAAA;UAAA;UAAA;QAAA,QAFF,eAQE;UAAO,OAAO,EAAC,QAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eASE;UACE,QAAQ,EAAEU,mBADZ;UAEE,EAAE,EAAC,QAFL;UAGE,IAAI,EAAC,QAHP;UAIE,KAAK,EAAER;QAJT;UAAA;UAAA;UAAA;QAAA,QATF,eAeE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CA7DD;;GAAMJ,a;;KAAAA,a;AA+DN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}